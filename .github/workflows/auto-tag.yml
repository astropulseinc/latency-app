name: Auto Tag on Merge

on:
  push:
    branches: [main]

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags

      - name: Get latest tag
        id: get_tag
        run: |
          # Get the latest tag, default to v1.0.0 if none exists
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Latest tag: $LATEST_TAG"

      - name: Increment patch version
        id: increment
        run: |
          LATEST_TAG="${{ steps.get_tag.outputs.latest_tag }}"

          # Remove 'v' prefix and split version
          VERSION=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          # Increment patch version
          PATCH=$((PATCH + 1))
          NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"

          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "New tag: $NEW_TAG"

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_TAG="${{ steps.increment.outputs.new_tag }}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git tag -a "$NEW_TAG" -m "Auto-generated tag $NEW_TAG"
          git push origin "$NEW_TAG"

          echo "âœ… Created and pushed tag: $NEW_TAG"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.increment.outputs.new_tag }}
          release_name: Release ${{ steps.increment.outputs.new_tag }}
          body: |
            Automated release for ${{ steps.increment.outputs.new_tag }}

            Commit: ${{ github.sha }}
          draft: false
          prerelease: false
