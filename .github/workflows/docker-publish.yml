name: Publish Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:

# Only run if commit message contains [DOCKER_GENERATE]

env:
  REGISTRY: docker.io
  IMAGE_NAME: astropulseinc/latency-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Only run if commit message contains [DOCKER_GENERATE]
    if: contains(github.event.head_commit.message, '[DOCKER_GENERATE]')
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all tags

      - name: Get latest tag
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Using tag: $LATEST_TAG"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.get_tag.outputs.tag }}
            type=raw,value=latest
            type=sha,prefix=sha-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo "Image published with digest ${{ steps.build-push.outputs.digest }}"
